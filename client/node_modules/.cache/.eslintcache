[{"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/index.js":"1","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/reportWebVitals.js":"2","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/App.js":"3","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/MovieList.js":"4","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/MovieListHeading.js":"5","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/RemoveFavourites.js":"6","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/AddFavourites.js":"7","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/Searchbox.js":"8","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/SearchBox.js":"9","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/Auth.js":"10","/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/UserPage.js":"11"},{"size":500,"mtime":1644858325069,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1644858325069,"results":"14","hashOfConfig":"13"},{"size":6209,"mtime":1645141773769,"results":"15","hashOfConfig":"13"},{"size":642,"mtime":1645136441053,"results":"16","hashOfConfig":"13"},{"size":177,"mtime":1645031433349,"results":"17","hashOfConfig":"13"},{"size":786,"mtime":1645031451215,"results":"18","hashOfConfig":"13"},{"size":452,"mtime":1645031396158,"results":"19","hashOfConfig":"13"},{"size":388,"mtime":1644895316924,"results":"20","hashOfConfig":"13"},{"size":323,"mtime":1645031651021,"results":"21","hashOfConfig":"13"},{"size":2793,"mtime":1645067519994,"results":"22","hashOfConfig":"13"},{"size":630,"mtime":1645142111415,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"58j7w5",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/index.js",[],[],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/reportWebVitals.js",[],[],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/App.js",["62","63","64","65","66","67","68"],[],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport AddFavourites from './components/AddFavourites';\nimport RemoveFavourites from './components/RemoveFavourites';\nimport Auth from './components/Auth';\nimport UserPage from './components/UserPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst App = () => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [favourites, setFavourites] = useState([]);\n\tconst [searchValue, setSearchValue] = useState('');\n  const [currentUser, setCurrentUser] = useState({});\n  const [dateRented, setDateRented] = useState( new Date().toLocaleString());\n  const [expiration, setExpiration] = useState( new Date().toLocaleString());\n  const [rating, setRating] = useState(0.00)\n  const [price, setPrice] = useState(5.00)\n  \n\tconst getMovieRequest = async () => {\n\t\tconst url = `http://localhost:3000/movies`;\n\n\t\tconst response = await fetch(url);\n\t\tconst responseJson = await response.json();\n\n\t\tif (responseJson) {\n\t\t\tsetMovies(responseJson);\n\t\t}\n\t};\n  // const getFavourites = async () => {\n\t// \tconst url = `http://localhost:3000/users`;\n\n\t// \tconst response = await fetch(url);\n\t// \tconst responseJson = await response.json();\n\n\t// \tif (responseJson) {\n\t// \t\tsetMovies(responseJson);\n\t// \t}\n\t// };\n\n\tuseEffect(() => {\n\t\tgetMovieRequest();\n    \n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst movieFavourites = currentUser.movies;\n\n\t\tif (movieFavourites) {\n\t\t\tsetFavourites(currentUser.movies);\n      console.log(\"favorites\" , favourites)\n\t\t}\n\t}, []);\n\n\tconst saveToLocalStorage = (items) => {\n\t\tlocalStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\n\t};\n\n\tconst addFavouriteMovie = (movie) => {\n   \n\n    const newFavourite = {\n        dateRented,\n        expiration,\n        price,\n        rating,\n        movie_id: movie.id,\n        user_id: currentUser.id\n    }\n    fetch(`http://localhost:3000/watchlists`, {\n        method: 'POST',\n        headers:{'Content-Type':'application/json'},\n        body:JSON.stringify(newFavourite)\n    })\n    console.log(newFavourite)\n    setFavourites(currentUser.movies)\n    \n    \n    // console.log(newFavourite)\n\t\t// const newFavouriteList = [...favourites, movie];\n\t\t// setFavourites(newFavouriteList);\n\t\t// saveToLocalStorage(newFavouriteList);\n\t};\n\n\tconst removeFavouriteMovie = (movie) => {\n\n     console.log('watchlists', currentUser.watchlists)\n     if (currentUser)\n     currentUser.watchlists.map((watchlist) => {\n       \n       if (watchlist.movie_id === movie.id) \n                 fetch(`http://localhost:3000/watchlists/${watchlist.id}`, {\n             method: \"DELETE\",\n           });\n          \n         \n         \n        \n     })\n     setFavourites(currentUser.movies);\n  };\n  //      if (watchlist.movie_id === movie.id) \n  //           fetch(`http://localhost:3000/watchlists/${watchlist.id}`, {\n  //       method: \"DELETE\",\n  //     });\n  //     setFavourites(currentUser.movies);\n  //   \n  //   else\n  //     console.log(\"error\")\n  // })\n\n\n   \n    //   fetch(`http://localhost:9292/watchlists/${movie.id}`, {\n    //     method: \"DELETE\",\n    //   });\n    //   setFolders(folders.filter(({ id }) => id !== folderId));\n    // };\n\t\t// const newFavouriteList = favourites.filter(\n\t\t// \t(favourite) => favourite.imdbID !== movie.imdbID\n\t\t// );\n\n\t\t// setFavourites(newFavouriteList);\n\t\t// saveToLocalStorage(newFavouriteList);\n\t\n\n\treturn (\n\t\t<div className='container-fluid movie-app'>\n      \n       <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/auth\">Login/Signup</Link>\n            </li>\n            <li>\n              <Link to=\"/movies\">Movies</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">User Info</Link>\n            </li>\n            <li>\n              <Link to=\"/watchlists\">Watchlist</Link>\n            </li>\n          </ul>\n        </nav>\n     \n\n        \n        <Switch>\n          <Route path=\"/auth\">\n           \n          <Auth\n       setCurrentUser={setCurrentUser} \n      setFavourites={setFavourites}\n      />\n          </Route>\n          <Route path=\"/users\">\n          <UserPage \n      currentUser={currentUser} \n      />\n          </Route>\n          <Route path=\"/movies\">\n          <div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Movies' />\n\t\t\t\t<SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n\t\t\t</div>\n      \n\t\t\t<div className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={movies}\n\t\t\t\t\thandleFavouritesClick={addFavouriteMovie}\n\t\t\t\t\tfavouriteComponent={AddFavourites}\n\t\t\t\t/>\n\t\t\t</div>\n          </Route>\n          <Route path=\"/watchlists\">\n        \t<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Watchlist' />\n\t\t\t</div>\n\t\t\t<div className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={favourites}\n\t\t\t\t\thandleFavouritesClick={removeFavouriteMovie}\n\t\t\t\t\tfavouriteComponent={RemoveFavourites}\n\t\t\t\t/>\n\t\t\t</div>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n      {/* <p>Current Logged in User is: {currentUser.username}</p>\n      <Auth\n       setCurrentUser={setCurrentUser} \n      setFavourites={setFavourites}\n      />\n      <UserPage \n      currentUser={currentUser} \n      />\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Movies' />\n\t\t\t\t<SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n\t\t\t</div>\n      \n\t\t\t<div className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={movies}\n\t\t\t\t\thandleFavouritesClick={addFavouriteMovie}\n\t\t\t\t\tfavouriteComponent={AddFavourites}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Favourites' />\n\t\t\t</div>\n\t\t\t<div className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={favourites}\n\t\t\t\t\thandleFavouritesClick={removeFavouriteMovie}\n\t\t\t\t\tfavouriteComponent={RemoveFavourites}\n\t\t\t\t/>\n\t\t\t</div> */}\n\t\t</div>\n\t);\n};\n\nexport default App;\n\n\n// `http://www.omdbapi.com/?s=${searchValue}&apikey=5eca1855`;",["69","70"],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/MovieList.js",[],[],["71","72"],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/MovieListHeading.js",[],[],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/RemoveFavourites.js",[],[],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/AddFavourites.js",[],[],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/Searchbox.js",[],[],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/SearchBox.js",[],[],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/Auth.js",["73","74","75"],[],"import React, { useState } from 'react'\n\n\nfunction Auth({setCurrentUser, setFavourites}) {\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [address, setAddress] = useState('')\n    const [name, setName] = useState('')\n    const [phone, setPhone] = useState('')\n    const [login, setLogin] = useState('')\n\n    const onSignUp = (e) => {\n        e.preventDefault();\n\n        const user = {\n            password,\n            username,\n            email,\n            address,\n            name,\n            phone\n        }\n        fetch(`http://localhost:3000/users`, {\n            method: 'POST',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify(user)\n        })\n        console.log(user)\n        setCurrentUser(user)\n        \n    }\n    const onLogIn = (e) => {\n        e.preventDefault();\n        fetch(`http://localhost:3000/users`).then((resp) => resp.json()).then(data => {\n            \n            let userData = data\n            console.log(\"hello\", userData)\n            userData.map((user) => {\n                if (user.password === password && user.username === username)\n                setCurrentUser(user);\n                setFavourites(user.movies);\n            })\n            \n        })\n\n        // userData.map((user) => {\n        //     if (user.password === password && user.username === username)\n        //     setCurrentUser(user) \n        //     else \n        //     alert(\"No Matching Credentials\");\n        // })\n        \n    }\n\n  return (\n    <div>\n        <p>Login/Sign Up Page</p>\n        <form onSubmit={onSignUp}>\n        <input type='text'placeholder='password' value={password} onChange={(e) => setPassword(e.target.value)}></input>\n        <input type='text'placeholder='username' value={username} onChange={(e) => setUsername(e.target.value)}></input>\n        <input type='text'placeholder='email' value={email} onChange={(e) => setEmail(e.target.value)}></input>\n        <input type='text'placeholder='address' value={address} onChange={(e) => setAddress(e.target.value)}></input>\n        <input type='text'placeholder='name' value={name} onChange={(e) => setName(e.target.value)}></input>\n        <input type='text'placeholder='phone' value={phone} onChange={(e) => setPhone(e.target.value)}></input>\n        <button>Sign Up</button>\n        </form >\n        <form onSubmit={onLogIn}>\n        <input type='text'placeholder='password' value={password} onChange={(e) => setPassword(e.target.value)}></input>\n        <input type='text'placeholder='username' value={username} onChange={(e) => setUsername(e.target.value)}></input>\n        \n        <button>Login</button>\n        </form >\n    </div>\n  )\n}\n\nexport default Auth",["76","77"],"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/components/UserPage.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":24,"column":22,"nodeType":"80","messageId":"81","endLine":24,"endColumn":35},{"ruleId":"78","severity":1,"message":"82","line":25,"column":22,"nodeType":"80","messageId":"81","endLine":25,"endColumn":35},{"ruleId":"78","severity":1,"message":"83","line":26,"column":18,"nodeType":"80","messageId":"81","endLine":26,"endColumn":27},{"ruleId":"78","severity":1,"message":"84","line":27,"column":17,"nodeType":"80","messageId":"81","endLine":27,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":62,"column":5,"nodeType":"87","endLine":62,"endColumn":7,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"89","line":64,"column":8,"nodeType":"80","messageId":"81","endLine":64,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":98,"column":45,"nodeType":"92","messageId":"93","endLine":98,"endColumn":47},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"78","severity":1,"message":"100","line":11,"column":12,"nodeType":"80","messageId":"81","endLine":11,"endColumn":17},{"ruleId":"78","severity":1,"message":"101","line":11,"column":19,"nodeType":"80","messageId":"81","endLine":11,"endColumn":27},{"ruleId":"90","severity":1,"message":"91","line":39,"column":33,"nodeType":"92","messageId":"93","endLine":39,"endColumn":35},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},"no-unused-vars","'setDateRented' is assigned a value but never used.","Identifier","unusedVar","'setExpiration' is assigned a value but never used.","'setRating' is assigned a value but never used.","'setPrice' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.movies' and 'favourites'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFavourites' needs the current value of 'currentUser.movies'.","ArrayExpression",["104"],"'saveToLocalStorage' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"'login' is assigned a value but never used.","'setLogin' is assigned a value but never used.",["105"],["106"],{"desc":"107","fix":"108"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [currentUser.movies, favourites]",{"range":"109","text":"110"},[1753,1755],"[currentUser.movies, favourites]"]