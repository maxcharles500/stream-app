{"ast":null,"code":"var _jsxFileName = \"/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport AddFavourites from './components/AddFavourites';\nimport RemoveFavourites from './components/RemoveFavourites';\nimport Auth from './components/Auth';\nimport UserPage from './components/UserPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [favourites, setFavourites] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [currentUser, setCurrentUser] = useState({});\n  const [dateRented, setDateRented] = useState(new Date().toLocaleString());\n  const [expiration, setExpiration] = useState(new Date().toLocaleString());\n  const [rating, setRating] = useState(0.00);\n  const [price, setPrice] = useState(5.00);\n\n  const getMovieRequest = async () => {\n    const url = `http://localhost:3000/movies`;\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    if (responseJson) {\n      setMovies(responseJson);\n    }\n  }; // const getFavourites = async () => {\n  // \tconst url = `http://localhost:3000/users`;\n  // \tconst response = await fetch(url);\n  // \tconst responseJson = await response.json();\n  // \tif (responseJson) {\n  // \t\tsetMovies(responseJson);\n  // \t}\n  // };\n\n\n  useEffect(() => {\n    getMovieRequest();\n  }, []);\n  useEffect(() => {\n    const movieFavourites = currentUser.movies;\n\n    if (movieFavourites) {\n      setFavourites(currentUser.movies);\n      console.log(\"favorites\", favourites);\n    }\n  }, []);\n\n  const saveToLocalStorage = items => {\n    localStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\n  };\n\n  const addFavouriteMovie = movie => {\n    if (currentUser) movie.preventDefault();\n    const newFavourite = {\n      dateRented,\n      expiration,\n      price,\n      rating,\n      movie_id: movie.id,\n      user_id: currentUser.id\n    };\n    fetch(`http://localhost:3000/watchlists`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newFavourite)\n    });\n    setFavourites; // const newFavouriteList = [...favourites, movie];\n    // setFavourites(newFavouriteList);\n    // saveToLocalStorage(newFavouriteList);\n  };\n\n  const removeFavouriteMovie = movie => {\n    const newFavouriteList = favourites.filter(favourite => favourite.imdbID !== movie.imdbID);\n    setFavourites(newFavouriteList);\n    saveToLocalStorage(newFavouriteList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid movie-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Logged in User is: \", currentUser.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {\n      setCurrentUser: setCurrentUser,\n      setFavourites: setFavourites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserPage, {\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        handleFavouritesClick: addFavouriteMovie,\n        favouriteComponent: AddFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Favourites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: favourites,\n        handleFavouritesClick: removeFavouriteMovie,\n        favouriteComponent: RemoveFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"/e1h8+Az/tXvLeXkUXUb7TeJMDU=\");\n\n_c = App;\nexport default App; // `http://www.omdbapi.com/?s=${searchValue}&apikey=5eca1855`;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maxjones/Flatiron/Code/Mod4/stream-app/client/src/App.js"],"names":["React","useState","useEffect","MovieList","MovieListHeading","SearchBox","AddFavourites","RemoveFavourites","Auth","UserPage","App","movies","setMovies","favourites","setFavourites","searchValue","setSearchValue","currentUser","setCurrentUser","dateRented","setDateRented","Date","toLocaleString","expiration","setExpiration","rating","setRating","price","setPrice","getMovieRequest","url","response","fetch","responseJson","json","movieFavourites","console","log","saveToLocalStorage","items","localStorage","setItem","JSON","stringify","addFavouriteMovie","movie","preventDefault","newFavourite","movie_id","id","user_id","method","headers","body","removeFavouriteMovie","newFavouriteList","filter","favourite","imdbID","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport AddFavourites from './components/AddFavourites';\nimport RemoveFavourites from './components/RemoveFavourites';\nimport Auth from './components/Auth';\nimport UserPage from './components/UserPage';\n\nconst App = () => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [favourites, setFavourites] = useState([]);\n\tconst [searchValue, setSearchValue] = useState('');\n  const [currentUser, setCurrentUser] = useState({});\n  const [dateRented, setDateRented] = useState( new Date().toLocaleString());\n  const [expiration, setExpiration] = useState( new Date().toLocaleString());\n  const [rating, setRating] = useState(0.00)\n  const [price, setPrice] = useState(5.00)\n  \n\tconst getMovieRequest = async () => {\n\t\tconst url = `http://localhost:3000/movies`;\n\n\t\tconst response = await fetch(url);\n\t\tconst responseJson = await response.json();\n\n\t\tif (responseJson) {\n\t\t\tsetMovies(responseJson);\n\t\t}\n\t};\n  // const getFavourites = async () => {\n\t// \tconst url = `http://localhost:3000/users`;\n\n\t// \tconst response = await fetch(url);\n\t// \tconst responseJson = await response.json();\n\n\t// \tif (responseJson) {\n\t// \t\tsetMovies(responseJson);\n\t// \t}\n\t// };\n\n\tuseEffect(() => {\n\t\tgetMovieRequest();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst movieFavourites = currentUser.movies;\n\n\t\tif (movieFavourites) {\n\t\t\tsetFavourites(currentUser.movies);\n      console.log(\"favorites\" , favourites)\n\t\t}\n\t}, []);\n\n\tconst saveToLocalStorage = (items) => {\n\t\tlocalStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\n\t};\n\n\tconst addFavouriteMovie = (movie) => {\n    if (currentUser)\n    movie.preventDefault();\n\n    const newFavourite = {\n        dateRented,\n        expiration,\n        price,\n        rating,\n        movie_id: movie.id,\n        user_id: currentUser.id\n    }\n    fetch(`http://localhost:3000/watchlists`, {\n        method: 'POST',\n        headers:{'Content-Type':'application/json'},\n        body:JSON.stringify(newFavourite)\n    })\n    setFavourites\n\t\t// const newFavouriteList = [...favourites, movie];\n\t\t// setFavourites(newFavouriteList);\n\t\t// saveToLocalStorage(newFavouriteList);\n\t};\n\n\tconst removeFavouriteMovie = (movie) => {\n\t\tconst newFavouriteList = favourites.filter(\n\t\t\t(favourite) => favourite.imdbID !== movie.imdbID\n\t\t);\n\n\t\tsetFavourites(newFavouriteList);\n\t\tsaveToLocalStorage(newFavouriteList);\n\t};\n\n\treturn (\n\t\t<div className='container-fluid movie-app'>\n      <p>Current Logged in User is: {currentUser.username}</p>\n      <Auth\n       setCurrentUser={setCurrentUser} \n      setFavourites={setFavourites}\n      />\n      <UserPage \n      currentUser={currentUser} \n      />\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Movies' />\n\t\t\t\t<SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n\t\t\t</div>\n      \n\t\t\t<div className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={movies}\n\t\t\t\t\thandleFavouritesClick={addFavouriteMovie}\n\t\t\t\t\tfavouriteComponent={AddFavourites}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Favourites' />\n\t\t\t</div>\n\t\t\t<div className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={favourites}\n\t\t\t\t\thandleFavouritesClick={removeFavouriteMovie}\n\t\t\t\t\tfavouriteComponent={RemoveFavourites}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n\n\n// `http://www.omdbapi.com/?s=${searchValue}&apikey=5eca1855`;"]},"metadata":{},"sourceType":"module"}